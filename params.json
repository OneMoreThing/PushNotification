{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"PushNotification\r\n================\r\n\r\n毎回毎回忘れるので今回はメモ！   \r\n\r\n登場人物\r\n-----\r\n1. iPhone, iPad, iPod   \r\niPhone, iPadは手元にある端末。\r\n\r\n2. Apple Push Notification Service (APNs)   \r\nAPNsはアップが提供するサービス。\r\n\r\n3. Provider   \r\nProviderはPushしたい情報を送信するやつ（サーバー側ですかね）\r\n\r\n手順\r\n-----\r\n\r\n### デバイス登録   \r\nAPNsにPush通知する端末を登録。APNsから一意のデバイストークンが発行されるので、それをProviderが持つことになる。\r\n\r\n### アプリインストール   \r\nアプリ起動時に端末からAPNsへデバイスの認証を通知。\r\nAPNsから認証されると、デバイストークンを受け取る。\r\n端末からデバイストークンをProviderに送る。\r\n\r\n### Push通知   \r\nProviderがPushしたい情報をAPNsに送る。APNsが認証されると、端末宛にPush通知が送られる。\r\n\r\n### 鍵を作る   \r\nデバイス登録手順でアプリインストール、\r\niPhoneからAPNsへデバイス認証通知をするためには、鍵が必要\r\n\r\n### iOS Provisioning Portal   \r\nhttps://developer.apple.com/ios/manage/overview/index.action\r\n\r\n### 左メニューApp IDsから「New App ID」ボタンでアプリ生成   \r\n  Description: Push Notification Sample    \r\n  Bundle Seed ID: Use Team ID    \r\n  Bundle Identifier: com.dongriab.ios.dev.PushNotification (ここは開発用の*ではなく一意になるものにする必要がある)   \r\n\r\nApps一覧で作成したAppの「Configure」リンクをクリック   \r\nEnableにチェックを付ける。   \r\nDevelopment Push SSL Certificate   \r\nProduction Push SSL Certificate   \r\n上の二つあるが、まずは、DevelopmentのConfigureボタンを押す   \r\nGenerate a Certificate Signing Request 画面が出る。   \r\nContinue押して、次の画面へ   \r\n通常アプリ登録時生成した CertificateSigningRequest.certSigningRequest をアップロードする   \r\nGenerate で成功することを確認。失敗したら？わかりません   \r\nContinue押して、次の画面でDone   \r\n戻って、Development Push SSL Certificateの方のstatusがEnabledになってることを確認。   \r\naps_development.cer をダウンロードしてキーチェーンに保存   \r\nキーチェーンに「Apple Development IOS Push Services: ***」が入ってることを確認   \r\n\r\n証明書と秘密鍵が階層になっているのでこの２つを選択   \r\n名前は適当に   \r\napns_certificate.p12   \r\n\r\n以下のコマンドでpemファイルを生成\r\n\r\n    $ openssl pkcs12 -in apns_certificate.p12 -out apns_certificate.pem -nodes -clcerts  \r\n\r\n\r\napns_certificate.pemができたら、ここで作成したApp IDを指定したProvisioningファイルを作成して、Xcodeにインストール。   \r\ncode signに設定しておくことも忘れずに。   \r\nここでの code sign は 「iOS Team Provisioning Profile: *」は駄目でProvisioningのDevelopmentで \r\n上の指定した、Bundle Identifier(com.dongriab.ios.dev.***)でもう一つ生成して設定\r\n\r\n### AppDelegate.m\r\n\r\n### デバイストークンを受け取る\r\n    - (void)applicationDidFinishLaunching:(UIApplication *)application {\r\n        ...\r\n        // デバイス認証通知\r\n        [[UIApplication sharedApplication] registerForRemoteNotificationTypes:\r\n        (UIRemoteNotificationTypeBadge| UIRemoteNotificationTypeSound | UIRemoteNotificationTypeAlert)];\r\n    }\r\n\r\n### APNsから認証されるとデバイストークンを受け取ることができる。\r\n認証後はUIApplicationのapplication:didRegisterForRemoteNotificationsWithDeviceToken:メソッドが呼ばれるのでそこで受け取る。   \r\n\r\n    - (void)application:(UIApplication*)app didRegisterForRemoteNotificationsWithDeviceToken:(NSData*)devToken{\r\n        //NSLog(@\"deviceToken: %@\", devToken);\r\n        NSString *deviceToken = [[[[devToken description]\r\n                                   stringByReplacingOccurrencesOfString:@\"<\"withString:@\"\"]\r\n                                  stringByReplacingOccurrencesOfString:@\">\" withString:@\"\"]\r\n                                 stringByReplacingOccurrencesOfString: @\" \" withString: @\"\"];\r\n        [self sendProviderDeviceToken:deviceToken];\r\n    }\r\n\r\n### 認証エラー\r\n    - (void)application:(UIApplication*)app didFailToRegisterForRemoteNotificationsWithError:(NSError*)err{\r\n        NSString *text = [NSString stringWithFormat:@\"didFailToRegister Error:%@\",err];\r\n        debug.text = text;\r\n    }\r\n\r\n### Providerにデバイストークンを送信\r\n    - (void)sendProviderDeviceToken:(NSString *)token {\r\n        NSMutableData *data = [NSMutableData data];\r\n        [data appendData:[[@\"device=\" stringByAppendingFormat:@\"%@\",token] dataUsingEncoding:NSUTF8StringEncoding]];    \r\n        NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:\r\n                                        [NSURL URLWithString:@\"http://sinatra.heroku.com/push/device/\"]];\r\n        [request setValue:@\"application/x-www-form-urlencoded\" forHTTPHeaderField:@\"Content-Type\"];  \t\r\n        [request setHTTPMethod:@\"POST\"];\r\n        [request setHTTPBody:data];\r\n        [NSURLConnection connectionWithRequest:request delegate:self];\r\n    }\r\nサーバ側では、このデバイストークンをDBなりどこかに保存しておく。\r\n\r\n\r\n### Provider側の実装。  \r\n今回はRuby、Sinatraで実装することにする。  \r\nRuby, Sinatraについてはググって   \r\nAPNS gem 追加   \r\ngem \"jtv-apns\" # ios push notification   \r\n\r\n### push.rb   \r\n\r\n    ###################\r\n    # Hosts Config\r\n    ###################\r\n    \r\n    #APNS.host = 'gateway.push.apple.com' # Production\r\n    APNS.host = 'gateway.sandbox.push.apple.com' #Development\r\n    \r\n    APNS.feedback_host = 'feedback.push.apple.com'\r\n    \r\n    ####################\r\n    # Certificate Setup\r\n    ####################\r\n    APNS.pem  = 'cert/apns_certificate.pem'\r\n    APNS.pass = '******'\r\n    ####################\r\n    # Connection Mgmt\r\n    ####################\r\n    \r\n    get \"/push/\" do\r\n      device_token = 'bd4bc8c5 c2033f56 e0d08478 992cd783 f0bfb1ff f4787c32 b22594a6 3bce0464'\r\n    \r\n      n1 = [device_token, :aps => { :alert => 'Hello...', :badge => 1, :sound => 'default' }]\r\n      n2 = [device_token, :aps => { :alert => '... iPhone!', :badge => 1, :sound => 'default' }]\r\n      APNS.send_notifications([n1, n2])\r\n      erb :index\r\n    end\r\n\r\nEnterprise in-House 配布ではでは Development の config ではなく、Production の config を設定する。\r\n\r\n\r\n\r\n","google":"","name":"Pushnotification","tagline":"PushNotification Example"}